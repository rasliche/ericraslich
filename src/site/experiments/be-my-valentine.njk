---
title: Valentine?
references:
    - https://georgefrancis.dev/writing/crafting-organic-patterns-with-voronoi-tessellations/
    - https://twitter.com/trunarla/status/1753544163189227650
githubLink: 
---

<div class="max-w-2xl mt-4 leading-loose mx-auto">
    <h1 class="text-xl text-center">{{ title }}</h1>
    <svg class="border-dashed border-black border-2" viewBox="0 0 200 200">
    </svg>

    {# <p class="mt-2">
        Testing different Web APIs.
    </p>
    <video id="video-preview" class="border border-blue-700" autoplay></video>
    <select id="camera-select">
        <option>-- No Camera Selected --</option>
    </select> #}
</div>

<div class="flex flex-wrap max-w-2xl mt-4 leading-loose mx-auto">
    <div class="w-full p-2">
        {% changelog filePath=page.inputPath %}
    </div>
</div>

<div class="flex flex-wrap max-w-2xl mt-4 leading-loose mx-auto">
    <div class="w-full p-2">
        {% include 'partials/references.html' %}
    </div>
</div>

{# <script src="https://unpkg.com/delaunator@5.0.0/delaunator.min.js"></script> #}

<script>
    function randomInteger(max) {
        return Math.floor(Math.random() * max);
    }

    function randomfromArray(array) {
        return array[randomInteger(array.length)]
    }

    (function() {
        console.log('hello world')
        const colors = ['red', 'pink', 'lavender']
        const canvasElement = document.querySelector('svg')
        const points = [...Array(100)].map(() => {
            return [randomInteger(190)+5, randomInteger(190)+5]
        })

        points.forEach(pair => {
            const circle = document.createElementNS("http://www.w3.org/2000/svg", "circle")
            const circleColor = randomfromArray(colors)
            circle.setAttribute("cx", pair[0]) //.cx = pair.x
            circle.setAttribute("cy", pair[1]) //.cx = pair.x
            circle.setAttribute("r", 5) //.cx = pair.x
            circle.setAttribute("stroke", circleColor) //.cx = pair.x
            circle.setAttribute("fill", circleColor) //.cx = pair.x
            // console.log(circle)
            // <circle cx="25" cy="75" r="20" stroke="red" fill="transparent" stroke-width="5"/>
            canvasElement.appendChild(circle)
        })

        {# const delaunator = Delaunator.from(points) #}
        {# console.log(delaunator) #}
        // console.log(points)
    })()
</script>
